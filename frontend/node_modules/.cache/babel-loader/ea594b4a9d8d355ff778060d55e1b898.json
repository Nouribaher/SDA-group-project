{"ast":null,"code":"/**\r\n * Attach outside click listener\r\n * @param elements The inside elements\r\n * @param onOutsideClick Called on outside click\r\n */\nvar outsideClick = function outsideClick(elements, onOutsideClick, isEnabled) {\n  if (typeof window == 'undefined') return function () {};\n  var elementsArray = Array.isArray(elements) ? elements : [elements];\n\n  var handler = function handler(evt) {\n    if (typeof isEnabled == 'function' && !isEnabled()) return;\n    var targetElement = evt.target;\n\n    do {\n      if (elementsArray.indexOf(targetElement) != -1) return;\n      targetElement = targetElement.parentNode;\n    } while (targetElement);\n\n    onOutsideClick(evt);\n  };\n\n  document.addEventListener('click', handler);\n  return function () {\n    return document.removeEventListener('click', handler);\n  };\n};\n\nexport default outsideClick;","map":{"version":3,"sources":["../src/index.ts"],"names":["outsideClick","elementsArray","Array","handler","isEnabled","targetElement","evt","onOutsideClick","document"],"mappings":"AAAA;;;;;AAKA,IAAIA,YAAY,GAAG,SAAfA,YAAe,CAAA,QAAA,EAAA,cAAA,EAAA,SAAA,EAAA;AAKjB,MAAI,OAAA,MAAA,IAAJ,WAAA,EAAkC,OAAO,YAAA,CAAP,CAAA;AAElC,MAAIC,aAAa,GAAGC,KAAK,CAALA,OAAAA,CAAAA,QAAAA,IAAAA,QAAAA,GAAqC,CAAzD,QAAyD,CAAzD;;AAEA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAA,GAAA,EAAA;AACZ,QAAI,OAAA,SAAA,IAAA,UAAA,IAAkC,CAACC,SAAvC,EAAA,EAAoD;AACpD,QAAIC,aAAa,GAAGC,GAAG,CAAvB,MAAA;;AAEA,OAAG;AACD,UAAIL,aAAa,CAAbA,OAAAA,CAAAA,aAAAA,KAAwC,CAA5C,CAAA,EAAgD;AAChDI,MAAAA,aAAa,GAAGA,aAAa,CAA7BA,UAAAA;AAFF,KAAA,QAAA,aAAA;;AAKAE,IAAAA,cAAc,CAAdA,GAAc,CAAdA;AATF,GAAA;;AAYAC,EAAAA,QAAQ,CAARA,gBAAAA,CAAAA,OAAAA,EAAAA,OAAAA;AACA,SAAO,YAAA;AAAA,WAAMA,QAAQ,CAARA,mBAAAA,CAAAA,OAAAA,EAAN,OAAMA,CAAN;AAAP,GAAA;AAtBF,CAAA","sourcesContent":["/**\n * Attach outside click listener\n * @param elements The inside elements\n * @param onOutsideClick Called on outside click\n */\nlet outsideClick = (\n  elements: HTMLElement | HTMLElement[],\n  onOutsideClick: (evt: MouseEvent) => any,\n  isEnabled?: () => boolean\n) => {\n  if (typeof window == 'undefined') return () => {};\n\n  let elementsArray = Array.isArray(elements) ? elements : [elements];\n\n  let handler = (evt: MouseEvent) => {\n    if (typeof isEnabled == 'function' && !isEnabled()) return;\n    let targetElement = evt.target as HTMLElement;\n\n    do {\n      if (elementsArray.indexOf(targetElement) != -1) return;\n      targetElement = targetElement.parentNode as HTMLElement;\n    } while (targetElement);\n\n    onOutsideClick(evt);\n  };\n\n  document.addEventListener('click', handler);\n  return () => document.removeEventListener('click', handler);\n};\n\nexport default outsideClick;\n"]},"metadata":{},"sourceType":"module"}